---


- name: "Add {{ forkIdentifier|capitalize }} farmer CA certs and create new client certs"
  when: forkBuildRequirementsDescriptor.startOption == 'harvester'
  become: yes
  tags: certificates
  block:

    - name: "Ensure {{ forkIdentifier|capitalize }} CA cert(s) local directory"
      become: yes
      file:
        path: "{{ forkHomeDirectory }}/.{{ forkIdentifier }}-cacert"
        state: directory
        owner: "{{ forkSystemUsername }}"
        group: "{{ forkSystemUsername }}"
        mode: 0700

    - name: "Place {{ forkIdentifier|capitalize }} CA cert(s) in local directory"
      vars:
        contextProductStoreAction: restore
        contextComponentIdentifier: "{{ mavenoForksComponentIdentifier }}"
        contextProductOrganization: "{{ mavenoVendorIdentifier }}"
        contextProductLabel: "ca_cert-{{ forkBuildRequirementsDescriptor.farmerAddress }}-{{ forkIdentifier }}"
        contextProductDirectory: "{{ forkHomeDirectory }}/.{{ forkIdentifier }}-cacert/ca"
        contextSystemUser: "{{ forkSystemUsername }}"
      include_tasks: productStore.yml
      
    - name: "Create {{ forkIdentifier|capitalize }} new client certs"
      become_user: "{{ forkSystemUsername }}"
      shell: >
        . {{ forkApplicationDirectory }}/venv/bin/activate
        && {{ forkExecutableName }} init
        -c {{ forkHomeDirectory }}/.{{ forkIdentifier }}-cacert/ca
      args:
        chdir: "{{ forkApplicationDirectory }}"
        executable: /bin/bash


- name: "Add {{ forkIdentifier|capitalize }} wallet key"
  when: 
    - forkBuildRequirementsDescriptor.startOption != 'harvester'
    - "'mnemonics' in (lookup('file', 'files/credentials/' + inventory_hostname + '.yml')|from_yaml).forks[forkIdentifier].keys()"
  become: yes
  block:

    - name: "Place {{ forkIdentifier|capitalize }} mnemonics file"
      copy:
        dest: "{{ forkApplicationDirectory }}/.mnemonics"
        content: "{{ (lookup('file', 'files/credentials/' + inventory_hostname + '.yml')|from_yaml).forks[forkIdentifier].mnemonics }}"
        owner: "{{ forkSystemUsername }}"
        group: "{{ forkSystemUsername }}"
        mode: 0600

    - name: "Add {{ forkIdentifier|capitalize }} wallet key"
      become_user: "{{ forkSystemUsername }}"
      shell: >
        . {{ forkApplicationDirectory }}/venv/bin/activate
        && {{ forkExecutableName }} keys add
        -f {{ forkApplicationDirectory }}/.mnemonics
      args:
        chdir: "{{ forkApplicationDirectory }}"
        executable: /bin/bash

  always:
    - name: Remove mnemonics file
      file:
        path: "{{ forkApplicationDirectory }}/.mnemonics"
        state: absent


  ## Firewall

- name: "Allow {{ forkIdentifier|capitalize }} node network traffic"
  when: 
    - "'nodePort' in forkBuildRequirementsDescriptor.keys()"
    - forkBuildRequirementsDescriptor.startOption != 'harvester'
  become: yes
  ufw:
    rule: allow
    port: "{{ forkBuildRequirementsDescriptor.nodePort }}"
    proto: tcp

   #TODO: Man kann den Port nicht schlieÃŸen wenn unbekannt....
#- name: "Deny {{ forkIdentifier|capitalize }} node network traffic"
#  when: >
#    not 'nodePort' in forkBuildRequirementsDescriptor.keys()
#    or forkBuildRequirementsDescriptor.startOption == 'harvester'
#  become: yes
#  ufw:
#    rule: allow
#    port: "{{ forkBuildRequirementsDescriptor.nodePort }}"
#    proto: tcp
#    delete: yes

- name: "Allow {{ forkIdentifier|capitalize }} farmer network traffic"
  when: 
    - "'farmerPort' in forkBuildRequirementsDescriptor.keys()"
    - forkBuildRequirementsDescriptor.startOption != 'harvester'
  become: yes
  ufw:
    rule: allow
    port: "{{ forkBuildRequirementsDescriptor.farmerPort }}"
    proto: tcp


  # Cronjobs

- name: "Adds paths to CA certs to {{ forkIdentifier|capitalize }} crontab"
  become: yes
  cron:
    name: REQUESTS_CA_BUNDLE
    user: "{{ forkSystemUsername }}"
    env: yes
    job: "{{ mavenoSystemCaCertificatesFilePath }}"

- name: "Adds certs path to {{ forkIdentifier|capitalize }} crontab"
  become: yes
  cron:
    name: SSL_CERT_DIR
    user: "{{ forkSystemUsername }}"
    env: yes
    job: /etc/ssl/certs


  # Auto-updates

- name: "Generate {{ forkIdentifier|capitalize }} auto-update script"
  when:
    - forkBuildRequirementsDescriptor.updateHour is defined
    - forkBuildRequirementsDescriptor.updateMinute is defined
  become: yes
  template:
    src: update-git.sh.j2
    dest: "{{ mavenoManagingLocalBinaryDirectory }}/update-{{ forkIdentifier }}.sh"
    force: yes
    owner: "{{ mavenoManagingSystemUsername }}"
    group: "{{ mavenoManagingSystemUsername }}"
    mode: 0750
  tags: services

- name: "Setup daily cronjob for {{ forkIdentifier|capitalize }} auto-update"
  when:
    - forkBuildRequirementsDescriptor.updateHour is defined
    - forkBuildRequirementsDescriptor.updateMinute is defined
  become: yes
  cron:
    name: "{{ forkIdentifier|capitalize }} daily auto-update"
    user: "{{ mavenoManagingSystemUsername }}"
    hour: "{{ forkBuildRequirementsDescriptor.updateHour|string }}"
    minute: "{{ forkBuildRequirementsDescriptor.updateMinute|string }}"
    job: "sudo {{ mavenoManagingLocalBinaryDirectory }}/update-{{ forkIdentifier }}.sh 1>/dev/null 2>&1"
  tags: services


- name: Slurp .bashrc file from managing user
  become: yes
  slurp:
    src: "{{ mavenoManagingHomeDirectory }}/.bashrc"
  register: managingUserBashRcResult
  tags: utilities

- name: Cache content of managung user .bashrc file
  set_fact:
    managingUserBashRcFileContent: "{{ managingUserBashRcResult['content'] | b64decode }}"
  tags: utilities

  #TODO: Separate into utils/services
- name: "Adding aliases for {{ forkIdentifier|capitalize }} to .bashrc of managing user"
  when: not forkBuildRequirementsDescriptor.alias|default(forkIdentifier) in managingUserBashRcFileContent
  become: yes
  lineinfile:
    path: "{{ mavenoManagingHomeDirectory }}/.bashrc"
    line: |
      {{ forkBuildRequirementsDescriptor.alias|default(forkIdentifier) }}() {
          sudo su - {{ forkIdentifier }} -c "{{ forkApplicationDirectory }}/venv/bin/{{ forkExecutableName }} $*"
      }
    insertafter: '^#NON-INTERACTIVE.*'
  tags: utilities

- name: "Adding tail alias for {{ forkIdentifier|capitalize }} to .bashrc of managing user"
  become: yes
  lineinfile:
    path: "{{ mavenoManagingHomeDirectory }}/.bashrc"
    line: "alias tail_{{ forkBuildRequirementsDescriptor.alias|default(forkIdentifier) }}=\"sudo tail -f {{ forkConfigurationDirectory }}/mainnet/log/debug.log\""
    insertafter: '^#NON-INTERACTIVE.*'
  tags: utilities

- name: "Adding log inspector alias for {{ forkIdentifier|capitalize }} to .bashrc of managing user"
  when: "'fullnode' in forkBuildRequirementsDescriptor.startOption"
  become: yes
  lineinfile:
    path: "{{ mavenoManagingHomeDirectory }}/.bashrc"
    line: "alias inspect_{{ forkBuildRequirementsDescriptor.alias|default(forkIdentifier) }}=\"{{ mavenoManagingHomeDirectory }}/.local/bin/chia-log-analyzer --log={{ forkConfigurationDirectory }}/mainnet/log/debug.log\""
    insertafter: '^#NON-INTERACTIVE.*'
  tags: utilities


## Active Farmers

- name: "Appending invocation of showFarmer for {{ forkIdentifier|capitalize }} instance"
  when: "'farmer' in forkBuildRequirementsDescriptor.startOption"
  become: yes
  lineinfile:
    path: "{{ mavenoManagingHomeDirectory }}/.local/bin/show_farmers.sh"
    line: "showFarmer {{ forkServiceName }}"
    insertafter: EOL
  tags: utilities



  ## Wallet kicker

  #HINT: <forkUsername> <configDirName> <executableName> <restartCommand>
- name: "Appending invocation of wallet kick for {{ forkIdentifier|capitalize }} instance"
  when: "'wallet' in forkBuildRequirementsDescriptor.startOption"
  become: yes
  lineinfile:
    path: "{{ mavenoManagingHomeDirectory }}/.local/bin/wallet-kicker-git.sh"
    line: >
      kickWallet {{ forkSystemUsername }}
      {{ forkConfigurationDirectory|basename }}
      {{ forkExecutableName }}
      {{ mavenoForksStartOptionLookupTable[forkBuildRequirementsDescriptor.startOption] }}"
    insertafter: EOL
  tags: services

- name: Ensure cron job for wallet kicker script
  when: "'wallet' in forkBuildRequirementsDescriptor.startOption"
  become: yes
  cron:
    name: "Kick lazy wallets"
    user: "{{ mavenoManagingSystemUsername }}"
    job: "{{ mavenoManagingHomeDirectory }}/.local/bin/wallet-kicker-git.sh 1>/dev/null 2>&1"
    state: present
    hour: '*/5'
  tags: services


## Node Performance

- name: Adding aliases for showing node performance to shell of managing user
  when: "'fullnode' in forkBuildRequirementsDescriptor.startOption"
  become: yes
  lineinfile:
    path: "{{ mavenoManagingHomeDirectory }}/.bashrc"
    line: "alias node_performance=\"{{ mavenoManagingHomeDirectory }}/.local/bin/node_performance.py\""
    insertafter: '^#NON-INTERACTIVE.*'
  tags: utilities

- name: "Adding log file for {{ forkIdentifier|capitalize }}"
  when: "'fullnode' in forkBuildRequirementsDescriptor.startOption"
  become: yes
  lineinfile:
    path: "{{ mavenoManagingHomeDirectory }}/.local/bin/node_performance.py"
    line: "    ('{{ forkBuildRequirementsDescriptor.alias|default(forkIdentifier) }}', '{{ forkConfigurationDirectory }}/mainnet/log/debug.log'),"
    insertafter: '^LOGFILES.*'
  tags: utilities


- name: Set forktools to be installed
  set_fact:
    mavenoForksInstallForktools: yes
  tags: utilities


...
