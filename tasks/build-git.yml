---


- name: "Remove application directory of Forks node {{ forksNodeIdentifier }}"
  become: true
  file: 
    path: "{{ forksNodeApplicationDirectory }}"
    state: absent


- name: "Clone blockchain repository into source directory for Forks node {{ forksNodeIdentifier }}"
  become: true
  become_user: "{{ forksNodeSystemUsername }}"
  git:
    dest: "{{ forksNodeApplicationDirectory }}"
    repo: "https://github.com/{{ forksNodeRepositoryIdentifier }}.git"
    force: true
    update: yes
    recursive: yes
    version: "{{ forksNodeRepositoryBranch }}"
    umask: '0027'


  # Custom installer

- name: "Replace installer script with custom version for fork {{ forkIdentifier }}"
  when: forksNodeCustomInstallerStatResult.stat.exists
  become: true
  copy:
    src: "installer/{{ forkIdentifier }}/install.sh"
    dest: "{{ forksNodeApplicationDirectory }}/install.sh"
    owner: "{{ forksNodeSystemUsername }}"
    group: "{{ forksNodeSystemUsername }}"
    mode: 0750
    force: true
  tags: patches

- name: Make installer executable
  when: not forksNodeCustomInstallerStatResult.stat.exists
  become: true
  file: 
    path: "{{ forksNodeApplicationDirectory }}/install.sh"
    mode: 0750
  tags: patches


- name: "Add system user to sudo group of Forks node {{ forksNodeIdentifier }}"
  become: true
  user:
    name: "{{ forksNodeSystemUsername }}"
    groups:
      - sudo
    append: true


- name: "Install blockchain for Forks node {{ forksNodeIdentifier }}"
  when: forksNodeEnvironmentVariables | length == 0
  become: true
  become_user: "{{ forksNodeSystemUsername }}"
  shell: ./install.sh
  args:
    chdir: "{{ forksNodeApplicationDirectory }}"
    executable: /bin/sh
  async: "{{ (1800 * forksJobTimeFactor | default(1)) | int }}" # 30 mins * time factor
  poll: 0
  register: installBlockchainJob

- name: "Wait for blockchain being installed of Forks node {{ forksNodeIdentifier }}"
  when: forksNodeEnvironmentVariables | length == 0
  become: true
  become_user: "{{ forksNodeSystemUsername }}"
  async_status:
    jid: "{{ installBlockchainJob.ansible_job_id }}"
  register: asyncStatusResult
  until: asyncStatusResult.finished
  retries: "{{ (120 * forksJobTimeFactor | default(1)) | int }}" # 30 mins * time factor
  delay: 15


- name: "Install blockchain with additional environment variables for Forks node {{ forksNodeIdentifier }}"
  when: forksNodeEnvironmentVariables | length > 0
  become: true
  become_user: "{{ forksNodeSystemUsername }}"
  shell: ./install.sh
  args:
    chdir: "{{ forksNodeApplicationDirectory }}"
    executable: /bin/sh
  environment: "{{ forkBuildRequirementsDescriptor.env }}"
  async: "{{ (1800 * forksJobTimeFactor | default(1)) | int }}" # 30 mins * time factor
  poll: 0
  register: installBlockchainJob

- name: "Wait for blockchain being installed with additional environment variables of Forks node {{ forksNodeIdentifier }}"
  when: forksNodeEnvironmentVariables | length > 0
  become: true
  become_user: "{{ forksNodeSystemUsername }}"
  async_status:
    jid: "{{ installBlockchainJob.ansible_job_id }}"
  register: asyncStatusResult
  until: asyncStatusResult.finished
  retries: "{{ (120 * forksJobTimeFactor | default(1)) | int }}" # 30 mins * time factor
  delay: 15


- name: "Remove system user from sudo group of Forks node {{ forksNodeIdentifier }}"
  become: true
  command: "deluser {{ forksNodeSystemUsername }} sudo"


  ## Fix permissions

- name: "Fix ssl permissions on mozilla-ca module for Forks node {{ forksNodeIdentifier }}"
  when: forksNodePermissionsFix
  become: true
  file:
    path: "{{ forksNodeApplicationDirectory }}/mozilla-ca"
    state: directory
    recurse: yes
    owner: "{{ forksNodeSystemUsername }}"
    group: "{{ forksNodeSystemUsername }}"
    mode: u=rwX,g=rX,o=rX

- name: "Fix ssl permissions of Forks node {{ forksNodeIdentifier }}"
  when: forksNodePermissionsFix
  become: true
  file:
    path: "{{ forksNodeHomeDirectory }}/{{ forksNodeConfigurationDirectoryName }}/mainnet/config/ssl"
    state: directory
    recurse: yes
    owner: "{{ forksNodeSystemUsername }}"
    group: "{{ forksNodeSystemUsername }}"
    mode: u=rwX,g=,o=


## Initialize blockchain

- name: "Initialize blockchain of Forks node {{ forksNodeIdentifier }}"
  become: true
  become_user: "{{ forksNodeSystemUsername }}"
  shell: >
    . {{ forksNodeApplicationDirectory }}/venv/bin/activate &&
    {{ forksNodeExecutableName }} init
    {% if not forksNodePermissionsFix %}--fix-ssl-permissions{% endif %}
  args:
    chdir: "{{ forksNodeApplicationDirectory }}"
    executable: /bin/bash
  async: "{{ (1800 * forksJobTimeFactor | default(1)) | int }}" # 30 mins * time factor
  poll: 0
  register: initializeBlockchainJob

- name: "Wait for blockchain being initialized of Forks node {{ forksNodeIdentifier }}"
  become: true
  become_user: "{{ forksNodeSystemUsername }}"
  async_status:
    jid: "{{ initializeBlockchainJob.ansible_job_id }}"
  register: asyncStatusResult
  until: asyncStatusResult.finished
  retries: "{{ (120 * forksJobTimeFactor | default(1)) | int }}" # 30 mins * time factor
  delay: 15


# - name: Patch Forks nodes
#   include_tasks: patch.yml
#   tags: patches


- name: "Fix ssl permissions on mozilla-ca module for Forks node {{ forksNodeIdentifier }}"
  when: forksNodePermissionsFix
  become: true
  file:
    path: "{{ forksNodeApplicationDirectory }}/mozilla-ca"
    state: directory
    recurse: yes
    owner: "{{ forksNodeSystemUsername }}"
    group: "{{ forksNodeSystemUsername }}"
    mode: u=rwX,g=rX,o=rX


...
