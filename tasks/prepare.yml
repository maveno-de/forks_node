---


- name: Store location of current python venv
  set_fact:
    tempPythonInterpreter: >-
      {{ ansible_python_interpreter
      | default(forksSystemPythonInterpreter) }}
- name: Switch temporarily to system python
  set_fact:
    ansible_python_interpreter: "{{ forksSystemPythonInterpreter }}"
###

- name: Install required apt packages
  become: true
  apt:
    cache_valid_time: 10800
    name: "{{ forksCommonSystemPackages }}"

###
- name: Switch back to framework python venv
  set_fact:
    ansible_python_interpreter: "{{ tempPythonInterpreter }}"


- name: Ensure Forks Python virtual environment
  include_role:
    name: maveno_de.forks.utilities
    tasks_from: ensureVirtualEnvironment.yml

- name: Update local CA certs
  become: true
  shell: update-ca-certificates


  #HINT: Stopping all running services to prevent timeouts
  # when building due to cpu time consumption
- name: Stop Forks services
  when: forksNodeConfiguration.build | default('git') == 'git'
  become: true
  systemd:
    name: "{{ forksNodeServiceName }}.service"
    state: stopped
  changed_when: false
  failed_when: false
  loop: "{{ forksHostConfiguration }}"
  loop_control:
    loop_var: forksNodeConfiguration


- name: Adding aliases for showing temp and CPU clock to shell of managing user (RPi only)
  when: >-
    ansible_lsb.id == 'Raspbian'
    or ('raspi' in ansible_kernel
    and ansible_distribution == 'Ubuntu')
  become: true
  lineinfile:
    path: "{{ forksManagingHomeDirectory | default('/root') }}/.bashrc"
    line: "{{ forksCommandLineItem }}"
    insertafter: '^#NON-INTERACTIVE$'
  loop:
    - alias show_temp='watch -n 1 sudo vcgencmd measure_temp'
    - alias show_clock='watch -n 1 sudo vcgencmd measure_clock arm'
  loop_control:
    loop_var: forksCommandLineItem
  tags: utilities


- name: Ensure local directories for managing user
  become: true
  file:
    path: >-
      {{ forksManagingHomeDirectory | default('/root') }}/.local/{{ forksLocalDirectoryItem }}
    state: directory
    owner: "{{ forksManagingSystemUsername | default('root') }}"
    group: "{{ forksManagingSystemUsername | default('root') }}"
    mode: 0750
  loop:
    - bin
    - tmp
    - opt
    - var/forks
  loop_control:
    loop_var: forksLocalDirectoryItem
  tags: utilities



## Backup

- name: Ensure Forks backup root directory
  when: forksBackupDataDirectory is defined
  become: true
  file:
    path: "{{ forksBackupDataDirectory }}"
    state: directory
    owner: "{{ forksManagingSystemUsername | default('root') }}"
    group: "{{ forksManagingSystemUsername | default('root') }}"
    mode: 0700

- name: Create Forks logging directories
  become: true
  file:
    path: "{{ forksLoggingDirectory }}"
    state: directory
    owner: "{{ forksManagingSystemUsername | default('root') }}"
    group: "{{ forksManagingSystemUsername | default('root') }}"
    mode: 0750


- name: Create Forks backup data directories
  when: forksBackupDataDirectory is defined
  become: true
  file:
    path: "{{ forksBackupDataDirectory }}/{{ forksForkItem }}"
    state: directory
    owner: "{{ forksManagingSystemUsername | default('root') }}"
    group: "{{ forksManagingSystemUsername | default('root') }}"
    mode: 0700
  loop: "{{ forksProperties.keys() | select('in', group_names) }}"
  loop_control:
    loop_var: forksForkItem


  ## Node specific

- name: Prepare Fork nodes
  include_tasks: prepare-node.yml
  loop: "{{ forksHostConfiguration }}"
  loop_control:
    loop_var: forksNodeConfiguration




- name: Prepare Fork Git nodes
  when: forksNodeConfiguration.build | default('git') == 'git'
  include_tasks: prepare-git.yml
  loop: "{{ forksHostConfiguration }}"
  loop_control:
    loop_var: forksNodeConfiguration


- name: Ensure Forks installer subdirectories
  become: true
  file:
    path: "{{ forksInstallerDirectory }}/{{ forkIdentifier }}"
    state: directory
    recurse: yes
    owner: "{{ forksManagingSystemUsername | default('root') }}"
    group: "{{ forksManagingSystemUsername | default('root') }}"
    mode: u=rwX,g=rX,o=rX

- name: Enumerate Forks patch files
  delegate_to: localhost
  find:
    path: "{{ role_path }}/files/patches/{{ forkIdentifier }}"
    recurse: true
  register: forksNodePatchFindResult


- name: Ensure Forks patch directory
  become: true
  file:
    path: "{{ forksPatchRootDirectory }}"
    state: directory
    recurse: yes
    owner: "{{ forksManagingSystemUsername | default('root') }}"
    group: "{{ forksManagingSystemUsername | default('root') }}"
    mode: u=rwX,g=rX,o=rX

- name: Ensure Forks patch subdirectories
  become: true
  file:
    path: >-
      {{ forksPatchRootDirectory }}/{{ patchFile.path
      | relpath(role_path + '/files/patches') | dirname }}
    state: directory
    recurse: yes
    owner: "{{ forksManagingSystemUsername | default('root') }}"
    group: "{{ forksManagingSystemUsername | default('root') }}"
    mode: u=rwX,g=rX,o=rX
  loop: "{{ forksNodePatchFindResult.files | default([]) }}"
  loop_control:
    loop_var: patchFile
  tags: patches


  #HINT: Can cause permissions error when using multiple usernames for forks
- name: Remove Forks specific temp dir
  become: true
  file: 
    path: /tmp/clvm_compile
    state: absent


- name: Setup Forks Node Tunnels
  when: "'tunnels' in forksNodeConfiguration"
  include_tasks: tunnels.yml
  loop: "{{ forksHostConfiguration }}"
  loop_control:
    loop_var: forksNodeConfiguration
  tags: tunnels


...
