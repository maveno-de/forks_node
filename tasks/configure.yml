---


- name: Configure Fork Git nodes
  when: forksComponentItem.host == inventory_hostname
  include_tasks: configure-git.yml
  loop: >-
    {{ (forksComponentsConfiguration
    | selectattr('host', 'equalto', inventory_hostname)
    | selectattr('build', 'undefined')
    + forksComponentsConfiguration
    | selectattr('host', 'equalto', inventory_hostname)
    | selectattr('build', 'defined')
    | selectattr('build', 'equalto', 'git')) }}
  loop_control:
    loop_var: forksComponentItem
  tags: updates

- name: Configure Fork Docker Components
  when: forksComponentItem.host == inventory_hostname
  vars:
    forksNodeForkIdentifier: "{{ forksComponentItem.fork }}"
  include_tasks: configure-docker.yml
  loop: >-
    {{ forksComponentsConfiguration
    | selectattr('host', 'equalto', inventory_hostname)
    | selectattr('build', 'defined')
    | selectattr('build', 'equalto', 'docker') }}
  loop_control:
    loop_var: forksComponentItem


  ## Commons

- name: Configure Fork node ramdisk logging
  when: forksComponentItem.host == inventory_hostname
  include_tasks:
    file: logging.yml
    apply:
      tags: logging
  loop: >-
    {{ forksComponentsConfiguration }}
  loop_control:
    loop_var: forksComponentItem
  tags: logging


- name: Create tempfile directory for certificates
  delegate_to: localhost
  tempfile:
    state: directory
  register: forksCertificatesTempfileResult
  changed_when: false
  run_once: true
  tags: certificates

- name: Distribute certs
  when: forksComponentItem.host == inventory_hostname
  include_tasks:
    file: certificates.yml
    apply:
      tags: certificates
  loop: >-
    {{ forksComponentsConfiguration
    | selectattr('host', 'equalto', inventory_hostname)
    | selectattr('certs', 'defined') }}
  loop_control:
    loop_var: forksComponentItem
  tags: certificates


- name: Restart Forks services
  become: true
  systemd:
    name: "{{ forksNodeServiceName }}.service"
    daemon-reload: yes
    enabled: "{{ forksNodeEnabled }}"
    state: "{{ forksNodeEnabled|ternary('restarted', 'stopped') }}"
  changed_when: false
  loop: >-
    {{ forksComponentsConfiguration
    | selectattr('host', 'equalto', inventory_hostname) }}
  loop_control:
    loop_var: forksComponentItem
  tags:
    - patches
    - logging
    - certificates


- name: Assign Chia fork instance group to managing user
  become: true
  user:
    name: "{{ forksManagingSystemUsername|default('root') }}"
    groups: 
      - "{{ forkSystemUsernameItem }}"
    append: yes
  loop: >-
    {{ (forksComponentsConfiguration|selectattr('host', 'equalto', inventory_hostname)
    | selectattr('username', 'defined')|map(attribute='username')
    + forksComponentsConfiguration|selectattr('host', 'equalto', inventory_hostname)
    | selectattr('username', 'undefined')|map(attribute='identifier'))|unique }}
  loop_control:
    loop_var: forkSystemUsernameItem


## Qwinns Forktools

#- name: Setup Qwinns Forktools
#  when: forksInstallForktools is defined
#  include_tasks: installForktools.yml
#  tags: utilities


...
